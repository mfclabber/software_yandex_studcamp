import RPi.GPIO as GPIO
import time

# Пины
BUZZER_PIN = 10  # Пин для подключения к пьезоэлементу

# Настройка GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setup(BUZZER_PIN, GPIO.OUT)

# Создание PWM объекта для управления частотой пьезоэлемента
buzzer = GPIO.PWM(BUZZER_PIN, 440)  # Начальная частота


# Функция для воспроизведения тона
def play_tone(frequency, duration):
    buzzer.ChangeFrequency(frequency)
    buzzer.start(50)  # 50% duty cycle
    time.sleep(duration)
    buzzer.stop()

notes = {
    'c0':131,
    'd0b':139,
    'd0':147,
    'e0b':155,
    'e0':165,
    'f0':175,
    'g0b':185,
    'g0':196,
    'a0b':208,
    'a0':220,
    'b0b':233,
    'b0':247,

    'c1':261,
    'd1b':277,
    'd1':293,
    'e1b':311,
    'e1':330,
    'f1':350,
    'g1b':370,
    'g1':392,
    'a1b':415,
    'a1':440,
    'b1b':466,
    'b1':493,
    
    'c2':523,
    'd2b':554,
    'd2':587,
    'e2b':622,
    'e2':659,
    'f2':698,
    'g2b':740,
    'g2':784,
    'a2b':830,
    'a2':880,
    'b2b':932,
    'b2':988,
}


# melody = [
#     ('a1', 0.5), ('a1', 0.5), ('a1', 0.5),
#     ('f1', 0.75/2), ('c2', 0.25/2), ('a1', 0.5),
#     ('f1', 0.75/2), ('c2', 0.25/2), ('a1', 1),

#     ('e2', 0.5), ('e2', 0.5), ('e2', 0.5),
#     ('f2', 0.75/2), ('c2', 0.25/2), ('a1b', 0.5),
#     ('f1', 0.75/2), ('c2', 0.25/2), ('a1', 1),

#     ('a2',0.5),('a1',0.75/2),('a1',0.25/2),('a2',0.5),('a2b',0.75/2),('g2',0.25/2),('g2b',0.25/2),('f2',0.25/2),('g2b',0.75),

#     ('b1b',0.25),('e2b',0.5),('d2',0.75/2),('d2b',0.25/2),('c2',0.25/2),('b1',0.25/2),('c2',0.75),

#     ('f1',0.25),('a1b',0.5),('f1',0.75/2),('c2',0.25/2),('a1',0.5),('f1',0.75/2),('c2',0.25/2),('a1',0.5),('f1',0.75/2),('c2',0.25/2),('a1',1)
# ]

melody = ['b1b', 'b1b', 'a1b', 'a1b', 'f2', 'f2', 'e2b', 'b1b', 'b1b', 'a1b', 'a1b', 'e2b', 'e2b', 'd2b', 'c2', 'b1b',
'd2b', 'd2b', 'd2b', 'd2b', 'd2b', 'e2b', 'c2', 'b1b', 'a1b', 'a1b', 'a1b', 'e2b', 'd2b',
'b1b', 'b1b', 'a1b', 'a1b', 'f2', 'f2', 'e2b', 'b1b', 'b1b', 'a1b', 'a1b', 'a2b', 'c2', 'd2b', 'c2', 'b1b',
'd2b', 'd2b', 'd2b', 'd2b', 'd2b', 'e2b', 'c2', 'b1b', 'a1b', 'rest', 'a1b', 'e2b', 'd2b']

rhythmn = [1, 1, 1, 1,
3, 3, 6, 1, 1, 1, 1, 3, 3, 3, 1, 2,
1, 1, 1, 1,
3, 3, 3, 1, 2, 2, 2, 4, 8,
1, 1, 1, 1,
3, 3, 6, 1, 1, 1, 1, 3, 3, 3,
1, 2,
1, 1, 1, 1,
3, 3, 3, 1, 2, 2, 2, 4, 8, 4]


# notes = {
#     'C4': 261,
#     'D4': 294,
#     'E4': 329,
#     'F4': 349,
#     'G4': 392,
#     'A4': 440,
#     'B4': 494,
#     'C5': 523,
#     'D5': 587,
#     'E5': 659,
#     'F5': 698,
#     'G5': 784,
# }

# melody = [
#        ('E4', 0.5), ('E4', 0.5), ('E4', 0.5), ('E4', 0.5)
#    ]
# Воспроизведение мелодии
try:
    for i in range(len(melody)):
        n, duration = melody[i],0.06*rhythmn[i]
        frequency = notes[n]
        play_tone(frequency, duration)
        time.sleep(0.1)  # Пауза между нотами

finally:
    GPIO.cleanup()  # Чистим настройки GPIO после выполнения программы

